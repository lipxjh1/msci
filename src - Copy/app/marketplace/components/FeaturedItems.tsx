'use client';

import React, { useState } from 'react';
import Image from 'next/image';
import { ArrowRight } from 'lucide-react';
import ItemDetailModal from './ItemDetailModal';

// Interface cho item
interface Item {
  id: number;
  name: string;
  type: string;
  rarity: string;
  price: number;
  image: string;
  status: string;
  description?: string;
}

const featuredItems = [
  {
    id: 1,
    name: 'Akane - Chi·∫øn binh √Ånh s√°ng',
    type: 'Nh√¢n v·∫≠t',
    rarity: 'S',
    price: 50000,
    image: '/images/heroes/ui10.png',
    status: 'limited',
    description: 'Akane l√† n·ªØ chi·∫øn binh si√™u c·∫•p v·ªõi kh·∫£ nƒÉng chi·∫øn ƒë·∫•u v∆∞·ª£t tr·ªôi. S·ªü h·ªØu v≈© kh√≠ h·∫°ng n·∫∑ng v√† b·ªô gi√°p c√¥ng ngh·ªá M-SCI ti√™n ti·∫øn nh·∫•t, Akane l√† l·ª±a ch·ªçn h√†ng ƒë·∫ßu cho m·ªçi ƒë·ªôi h√¨nh.',
  },
  {
    id: 2,
    name: 'Alpha Bot X9',
    type: 'V·∫≠t ph·∫©m',
    rarity: 'A',
    price: 15000,
    image: '/images/heroes/robot_4.png',
    status: 'limited',
    description: 'Robot chi·∫øn ƒë·∫•u t·ª± ƒë·ªông Alpha Bot X9 l√† s·ª± k·∫øt h·ª£p gi·ªØa tr√≠ th√¥ng minh nh√¢n t·∫°o v√† s·ª©c m·∫°nh c∆° h·ªçc. C√≥ th·ªÉ h·ªó tr·ª£ t·∫•n c√¥ng, ph√≤ng th·ªß v√† thu th·∫≠p t√†i nguy√™n.',
  },
  {
    id: 3,
    name: 'Neuralink 2030',
    type: 'NFT',
    rarity: 'S',
    price: 35000,
    image: '/images/heroes/elon_musk.png',
    status: 'limited',
    description: 'NFT ƒë·ªôc quy·ªÅn gi·ªõi h·∫°n th·ªÉ hi·ªán b·∫£n thi·∫øt k·∫ø Neuralink 2030 - c√¥ng ngh·ªá k·∫øt n·ªëi n√£o ng∆∞·ªùi v·ªõi m√°y t√≠nh. Ch·ªâ c√≥ 100 NFT ƒë∆∞·ª£c ph√°t h√†nh tr√™n to√†n th·∫ø gi·ªõi.',
  },
];

export default function FeaturedItems() {
  const [selectedItem, setSelectedItem] = useState<Item | null>(null);
  const [isModalOpen, setIsModalOpen] = useState(false);

  const openItemDetail = (item: Item) => {
    setSelectedItem(item);
    setIsModalOpen(true);
  };

  const closeItemDetail = () => {
    setIsModalOpen(false);
  };

  return (
    <div>
      <div className="flex justify-between items-center mb-6">
        <h2 className="text-2xl font-bold text-center sm:text-left">
          üî• Giao d·ªãch n·ªïi b·∫≠t
        </h2>
        <a href="#" className="text-blue-400 hover:text-blue-300 flex items-center text-sm">
          Xem t·∫•t c·∫£ <ArrowRight size={16} className="ml-1" />
        </a>
      </div>
      
      <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
        {featuredItems.map((item) => (
          <div 
            key={item.id}
            className="bg-gray-800/60 backdrop-blur-sm border border-gray-700 rounded-xl overflow-hidden group hover:border-blue-500 transition-all duration-300 hover:shadow-lg hover:shadow-blue-500/20 cursor-pointer"
            onClick={() => openItemDetail(item)}
          >
            <div className="h-64 relative overflow-hidden">
              <Image 
                src={item.image}
                alt={item.name}
                fill
                className="object-cover object-center group-hover:scale-105 transition-transform duration-500"
              />
              <div className="absolute inset-0 bg-gradient-to-t from-gray-900/90 via-gray-900/50 to-transparent"></div>
              
              <div className="absolute bottom-0 left-0 right-0 p-4">
                <span className="inline-block px-2 py-1 bg-blue-600 text-white text-xs rounded-full uppercase font-bold mb-2">
                  Hot
                </span>
                <h3 className="text-xl font-bold text-white mb-1">
                  {item.name}
                </h3>
                <div className="flex justify-between items-center">
                  <span className="text-sm text-gray-300">
                    {item.type} ‚Ä¢ {item.rarity}
                  </span>
                  <span className="font-bold text-amber-400">{item.price.toLocaleString()} $MSCI</span>
                </div>
              </div>
            </div>
            
            <div className="p-4">
              <button 
                className="w-full bg-blue-600 hover:bg-blue-700 text-white py-2 rounded-lg transition-colors font-medium"
                onClick={(e) => {
                  e.stopPropagation();
                  openItemDetail(item);
                }}
              >
                Xem chi ti·∫øt
              </button>
            </div>
          </div>
        ))}
      </div>

      {/* Item Detail Modal */}
      <ItemDetailModal 
        isOpen={isModalOpen}
        onClose={closeItemDetail}
        item={selectedItem}
      />
    </div>
  );
} 